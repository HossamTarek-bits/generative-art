{"version":3,"sources":["sketches/sketch01.js","Models/RandomMovingPoint.js","sketches/sketch02.js","sketches/sketch03.js","sketches/sketch04.js","App.js","index.js"],"names":["Sketch01","useTweaks","step","value","min","max","strokeWeight","Math","floor","random","color","sketch","p5","width","windowHeight","height","draw","x","y","leftToRight","stroke","line","setup","createCanvas","RandomMovingPoint","radiusMin","radiusMax","speed","this","radius","pos","createVector","vel","noFill","ellipse","Sketch02","num","distance","points","i","push","length","j","dist","update","bounce","Sketch03","maxRadius","Circle","size","totalCircles","circles","createAndDrawCircle","newCircle","circleSafeToDraw","tries","doesCircleHaveACollision","radiusSize","circle","otherCircle","a","sqrt","Sketch04","finalSize","minStartSteps","maxStartSteps","fill","startSteps","tileStep","offset","startSize","directions","xMovement","yMovement","steps","rect","newSize","newX","newY","ceil","xDirection","yDirection","App","Navbar","expand","Container","Toggle","bg","Collapse","id","Nav","className","Link","href","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0837d5bd.chunk.js","sourcesContent":["import React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { useTweaks } from \"use-tweaks\";\nexport const Sketch01 = () => {\n    const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\n    const { step, strokeWeight, color } = useTweaks({\n        step: { value: 64, min: 5, max: 100, step: 1 },\n        strokeWeight: {\n            value: Math.floor(Math.random() * 3) + 1,\n            min: 1,\n            max: 30,\n        },\n        color: colors[Math.floor(Math.random() * 3)],\n    });\n    function sketch(p5) {\n        let width = p5.windowHeight * 0.7;\n        let height = p5.windowHeight * 0.7;\n        const draw = (p5, x, y, width, height) => {\n            const leftToRight = p5.random([false, true]);\n            p5.stroke(color);\n            p5.strokeWeight(strokeWeight);\n            if (leftToRight) p5.line(x, y, x + width, y + height);\n            else p5.line(x + width, y, x, y + height);\n        };\n\n        p5.setup = function () {\n            p5.createCanvas(width, height);\n            for (var x = 0; x < width; x += step) {\n                for (var y = 0; y < width; y += step) {\n                    draw(p5, x, y, step, step);\n                }\n            }\n        };\n\n        p5.draw = function () {};\n    }\n\n    // let myp5 = p5(s, \"canvas\");\n\n    return <ReactP5Wrapper sketch={sketch} />;\n};\n","export class RandomMovingPoint {\r\n    constructor(\r\n        p5,\r\n        x,\r\n        y,\r\n        radiusMin = 15,\r\n        radiusMax = 30,\r\n        speed = 1,\r\n        color = \"#3E065F\",\r\n        strokeWeight = 3\r\n    ) {\r\n        this.radius = Math.floor(p5.random(radiusMin, radiusMax));\r\n        this.pos = p5.createVector(x, y);\r\n        this.vel = p5.createVector(\r\n            p5.random(-1, 1) * speed,\r\n            p5.random(-1, 1) * speed\r\n        );\r\n        this.color = color;\r\n        this.strokeWeight = strokeWeight;\r\n    }\r\n\r\n    update() {\r\n        this.pos.x += this.vel.x;\r\n        this.pos.y += this.vel.y;\r\n    }\r\n\r\n    bounce(width, height) {\r\n        if (this.pos.x - this.radius <= 0 || this.pos.x + this.radius >= width)\r\n            this.vel.x *= -1;\r\n        if (this.pos.y - this.radius <= 0 || this.pos.y + this.radius >= height)\r\n            this.vel.y *= -1;\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.stroke(this.color);\r\n        p5.noFill();\r\n        p5.strokeWeight(this.strokeWeight);\r\n        p5.ellipse(this.pos.x, this.pos.y, this.radius);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\nimport { RandomMovingPoint } from \"../Models/RandomMovingPoint\";\r\nexport const Sketch02 = () => {\r\n    const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\r\n    const { num, speed, radiusMin, radiusMax, strokeWeight, color, distance } =\r\n        useTweaks({\r\n            num: { value: 30, min: 1, max: 100, step: 1 },\r\n            speed: { value: 1, min: 1, max: 30 },\r\n            radiusMin: { value: 15, min: 1, max: 30 },\r\n            radiusMax: { value: 30, min: 30, max: 300 },\r\n            strokeWeight: {\r\n                value: Math.floor(Math.random() * 3) + 1,\r\n                min: 1,\r\n                max: 30,\r\n            },\r\n            color: colors[Math.floor(Math.random() * 3)],\r\n            distance: { value: 300, min: 1, max: 1000 },\r\n        });\r\n\r\n    const sketch = (p5) => {\r\n        let width = p5.windowHeight * 0.8;\r\n        let height = p5.windowHeight * 0.8;\r\n        const points = [];\r\n\r\n        p5.setup = function () {\r\n            for (let i = 0; i < num; i++) {\r\n                points.push(\r\n                    new RandomMovingPoint(\r\n                        p5,\r\n                        p5.random(0, width),\r\n                        p5.random(0, height),\r\n                        radiusMin,\r\n                        radiusMax,\r\n                        speed,\r\n                        color,\r\n                        strokeWeight\r\n                    )\r\n                );\r\n            }\r\n        };\r\n\r\n        p5.draw = function () {\r\n            p5.createCanvas(width, height);\r\n\r\n            for (let i = 0; i < points.length; i++) {\r\n                for (let j = i + 1; j < points.length; j++) {\r\n                    const d = p5.dist(\r\n                        points[i].pos.x,\r\n                        points[i].pos.y,\r\n                        points[j].pos.x,\r\n                        points[j].pos.y\r\n                    );\r\n                    if (d >= distance) continue;\r\n                    p5.stroke(color);\r\n                    p5.strokeWeight(1);\r\n                    p5.line(\r\n                        points[i].pos.x,\r\n                        points[i].pos.y,\r\n                        points[j].pos.x,\r\n                        points[j].pos.y\r\n                    );\r\n                }\r\n                points[i].update();\r\n                points[i].draw(p5);\r\n                points[i].bounce(width, height);\r\n            }\r\n        };\r\n    };\r\n\r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","import { delay } from \"q\";\r\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\nexport const Sketch03 = () => {\r\n    const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\r\n    const { maxRadius, strokeWeight, color } = useTweaks({\r\n        maxRadius: { value: 300, min: 30, max: 3000, step: 10 },\r\n        strokeWeight: {\r\n            value: Math.floor(Math.random() * 3) + 1,\r\n            min: 1,\r\n            max: 30,\r\n        },\r\n        color: colors[Math.floor(Math.random() * 3)],\r\n    });\r\n    class Circle {\r\n        constructor(x, y, radius, color, strokeWeight) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.radius = radius;\r\n            this.color = color;\r\n            this.strokeWeight = strokeWeight;\r\n        }\r\n\r\n        draw(p5) {\r\n            p5.stroke(this.color);\r\n            p5.noFill();\r\n            p5.strokeWeight(this.strokeWeight);\r\n            p5.ellipse(this.x, this.y, this.radius * 2);\r\n        }\r\n    }\r\n    const sketch = (p5) => {\r\n        const size = p5.windowHeight * 0.8;\r\n        const minRadius = 5;\r\n        // const maxRadius = 3000;\r\n        const createCircleAttempts = 300;\r\n        const totalCircles = size;\r\n        const circles = [];\r\n        function createAndDrawCircle() {\r\n            let newCircle;\r\n            let circleSafeToDraw = false;\r\n            for (let tries = 0; tries < createCircleAttempts; tries++) {\r\n                newCircle = new Circle(\r\n                    Math.floor(Math.random() * size),\r\n                    Math.floor(Math.random() * size),\r\n                    minRadius,\r\n                    color,\r\n                    strokeWeight\r\n                );\r\n\r\n                if (doesCircleHaveACollision(newCircle)) {\r\n                    continue;\r\n                } else {\r\n                    circleSafeToDraw = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!circleSafeToDraw) {\r\n                return;\r\n            }\r\n\r\n            for (\r\n                let radiusSize = minRadius;\r\n                radiusSize <= maxRadius;\r\n                radiusSize++\r\n            ) {\r\n                newCircle.radius = radiusSize;\r\n                if (doesCircleHaveACollision(newCircle)) {\r\n                    newCircle.radius--;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            circles.push(newCircle);\r\n\r\n            newCircle.draw(p5);\r\n        }\r\n\r\n        function doesCircleHaveACollision(circle) {\r\n            for (let i = 0; i < circles.length; i++) {\r\n                if (circle === circles[i]) return false;\r\n                let otherCircle = circles[i];\r\n                let a = circle.radius + otherCircle.radius;\r\n                let x = circle.x - otherCircle.x;\r\n                let y = circle.y - otherCircle.y;\r\n\r\n                if (a >= Math.sqrt(x * x + y * y)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (\r\n                circle.x + circle.radius >= size ||\r\n                circle.x - circle.radius <= 0\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            if (\r\n                circle.y + circle.radius >= size ||\r\n                circle.y - circle.radius <= 0\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        p5.setup = function () {\r\n            p5.createCanvas(size, size);\r\n            for (let i = 0; i < totalCircles; i++) {\r\n                createAndDrawCircle();\r\n            }\r\n        };\r\n        p5.draw = function () {};\r\n    };\r\n\r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","import { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\n\r\nexport const Sketch04 = () => {\r\n    // const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\r\n    const { strokeWeight, color,finalSize,minStartSteps,maxStartSteps} = useTweaks({\r\n        strokeWeight: {\r\n            value: Math.floor(Math.random() * 3) + 1,\r\n            min: 1,\r\n            max: 10,\r\n        },\r\n        color: \"#4f87bc\",\r\n        finalSize : {\r\n          value: 3,\r\n          min:1,\r\n          max:3\r\n        },\r\n        minStartSteps:{\r\n          value:2,\r\n          min:2,\r\n          max:10\r\n        },\r\n        maxStartSteps:{\r\n          value:3,\r\n          min:3,\r\n          max:30\r\n        }\r\n    });\r\n    \r\n    const sketch = (p5) => {\r\n        const size = p5.windowHeight * 0.8;\r\n\r\n        p5.setup = function () {\r\n            p5.createCanvas(size, size);\r\n            p5.strokeWeight(strokeWeight);\r\n            \r\n            p5.stroke(color)\r\n            p5.fill(0,0,0)\r\n            const offset = 2\r\n            let startSteps;\r\n            const tileStep = (size - offset * 2) / 7;\r\n            const startSize = tileStep;\r\n            const directions = [-1, 0, 1];\r\n\r\n            function draw(x, y, width, height, xMovement, yMovement, steps) {\r\n              \r\n              p5.rect(x, y, width, height);\r\n\r\n              if(steps >= 0) {\r\n                var newSize = (startSize) * (steps / startSteps) + finalSize;\r\n                var newX = x + (width - newSize) / 2\r\n                var newY = y + (height - newSize) / 2\r\n                newX = newX - ((x - newX) / (steps + 2)) * xMovement\r\n                newY = newY - ((y - newY) / (steps + 2)) * yMovement\r\n                draw(newX, newY, newSize, newSize, xMovement, yMovement, steps - 1);\r\n              }\r\n            }\r\n\r\n            for( var x = offset; x < size - offset; x += tileStep) {\r\n              for( var y = offset; y < size - offset; y += tileStep) {\r\n                startSteps = minStartSteps + Math.ceil(Math.random() * maxStartSteps)\r\n                var xDirection = directions[Math.floor(Math.random() * directions.length)]\r\n                var yDirection = directions[Math.floor(Math.random() * directions.length)]\r\n                draw(x, y, startSize, startSize, xDirection, yDirection, startSteps - 1);\r\n              }\r\n            }\r\n        };\r\n        p5.draw = function () {\r\n            \r\n        };\r\n    };\r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","import \"./App.css\";\nimport { Sketch01 } from \"./sketches/sketch01\";\nimport { Sketch02 } from \"./sketches/sketch02\";\nimport { Sketch03 } from \"./sketches/sketch03\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { Sketch04 } from \"./sketches/sketch04\";\nconst App = () => {\n    return (\n        <>\n            <Navbar expand=\"lg\">\n                <Container>\n                    <Navbar.Toggle\n                        aria-controls=\"basic-navbar-nav\"\n                        bg=\"light\"\n                    />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Link href=\"/generative-art/sketch01\">\n                                Sketch01\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch02\">\n                                Sketch02\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch03\">\n                                Sketch03\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch04\">\n                                Sketch04\n                            </Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route\n                            exact={true}\n                            path={[\n                                \"/generative-art/\",\n                                \"/generative-art/sketch01\",\n                            ]}\n                        >\n                            <Sketch01 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch02\">\n                            <Sketch02 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch03\">\n                            <Sketch03 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch04\">\n                            <Sketch04 />\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}