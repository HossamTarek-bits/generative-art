{"version":3,"sources":["sketches/sketch01.js","Models/RandomMovingPoint.js","sketches/sketch02.js","sketches/sketch03.js","sketches/sketch04.js","sketches/sketch05.js","Models/sketch06/DNA.js","Models/sketch06/Population.js","sketches/sketch06.js","App.js","index.js"],"names":["Sketch01","useTweaks","step","value","min","max","strokeWeight","Math","floor","random","color","sketch","p5","width","windowWidth","height","windowHeight","draw","x","y","leftToRight","stroke","line","setup","createCanvas","RandomMovingPoint","radiusMin","radiusMax","speed","this","radius","pos","createVector","vel","noFill","ellipse","Sketch02","num","distance","points","i","push","length","j","dist","update","bounce","Sketch03","maxRadius","Circle","totalCircles","circles","createAndDrawCircle","newCircle","circleSafeToDraw","tries","doesCircleHaveACollision","radiusSize","circle","otherCircle","a","sqrt","Sketch04","finalSize","minStartSteps","maxStartSteps","fill","startSteps","tileStep","offset","startSize","directions","xMovement","yMovement","steps","rect","newSize","newX","newY","ceil","xDirection","yDirection","Sketch05","colors","frameRate","followMouseProbability","WEBGL","translate","mouseVec","mouseX","mouseY","sub","normalize","mult","pop","add","drawFollowMouse","set","drawRandom","DNA","target","mutationRate","split","possibleCombo","createRandom","fitness","xFit","yFit","midpoint","result","charAt","Population","popMax","population","matingPool","numOfGens","averageFit","best","calculateFitness","forEach","e","maxFitness","n","midPoint","parentA","parentB","join","toFixed","updatePoint","sort","b","Sketch06","populationMax","targetPhrase","bestPhrase","createP","title","createA","position","class","console","log","generate","newGen","getBest","html","average","getAverageFit","getNumOfGens","noLoop","App","Navbar","expand","Container","Toggle","bg","Collapse","id","Nav","className","Link","href","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f32f1be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\nexport const Sketch01 = () => {\r\n    const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\r\n    const { step, strokeWeight, color } = useTweaks({\r\n        step: { value: 64, min: 5, max: 100, step: 1 },\r\n        strokeWeight: {\r\n            value: Math.floor(Math.random() * 3) + 1,\r\n            min: 1,\r\n            max: 30,\r\n        },\r\n        color: colors[Math.floor(Math.random() * 3)],\r\n    });\r\n    function sketch(p5) {\r\n        const width = p5.windowWidth * 0.6;\r\n        const height = p5.windowHeight * 0.6;\r\n        const draw = (p5, x, y, width, height) => {\r\n            const leftToRight = p5.random([false, true]);\r\n            p5.stroke(color);\r\n            p5.strokeWeight(strokeWeight);\r\n            if (leftToRight) p5.line(x, y, x + width, y + height);\r\n            else p5.line(x + width, y, x, y + height);\r\n        };\r\n\r\n        p5.setup = function () {\r\n            p5.createCanvas(width, height);\r\n            for (var x = 0; x < width; x += step) {\r\n                for (var y = 0; y < width; y += step) {\r\n                    draw(p5, x, y, step, step);\r\n                }\r\n            }\r\n        };\r\n\r\n        p5.draw = function () {};\r\n    }\r\n\r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","export class RandomMovingPoint {\r\n    constructor(\r\n        p5,\r\n        x,\r\n        y,\r\n        radiusMin = 15,\r\n        radiusMax = 30,\r\n        speed = 1,\r\n        color = \"#3E065F\",\r\n        strokeWeight = 3\r\n    ) {\r\n        this.radius = Math.floor(p5.random(radiusMin, radiusMax));\r\n        this.pos = p5.createVector(x, y);\r\n        this.vel = p5.createVector(\r\n            p5.random(-1, 1) * speed,\r\n            p5.random(-1, 1) * speed\r\n        );\r\n        this.color = color;\r\n        this.strokeWeight = strokeWeight;\r\n    }\r\n\r\n    update() {\r\n        this.pos.x += this.vel.x;\r\n        this.pos.y += this.vel.y;\r\n    }\r\n\r\n    bounce(width, height) {\r\n        if (this.pos.x - this.radius <= 0 || this.pos.x + this.radius >= width)\r\n            this.vel.x *= -1;\r\n        if (this.pos.y - this.radius <= 0 || this.pos.y + this.radius >= height)\r\n            this.vel.y *= -1;\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.stroke(this.color);\r\n        p5.noFill();\r\n        p5.strokeWeight(this.strokeWeight);\r\n        p5.ellipse(this.pos.x, this.pos.y, this.radius);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\nimport { RandomMovingPoint } from \"../Models/RandomMovingPoint\";\r\nexport const Sketch02 = () => {\r\n    const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\r\n    const { num, speed, radiusMin, radiusMax, strokeWeight, color, distance } =\r\n        useTweaks({\r\n            num: { value: 30, min: 1, max: 100, step: 1 },\r\n            speed: { value: 1, min: 1, max: 30 },\r\n            radiusMin: { value: 15, min: 1, max: 30 },\r\n            radiusMax: { value: 30, min: 30, max: 300 },\r\n            strokeWeight: {\r\n                value: Math.floor(Math.random() * 3) + 1,\r\n                min: 1,\r\n                max: 30,\r\n            },\r\n            color: colors[Math.floor(Math.random() * 3)],\r\n            distance: { value: 300, min: 1, max: 1000 },\r\n        });\r\n\r\n    const sketch = (p5) => {\r\n        const width = p5.windowWidth * 0.6;\r\n        const height = p5.windowHeight * 0.6;\r\n        const points = [];\r\n\r\n        p5.setup = function () {\r\n            for (let i = 0; i < num; i++) {\r\n                points.push(\r\n                    new RandomMovingPoint(\r\n                        p5,\r\n                        p5.random(0, width),\r\n                        p5.random(0, height),\r\n                        radiusMin,\r\n                        radiusMax,\r\n                        speed,\r\n                        color,\r\n                        strokeWeight\r\n                    )\r\n                );\r\n            }\r\n        };\r\n\r\n        p5.draw = function () {\r\n            p5.createCanvas(width, height);\r\n\r\n            for (let i = 0; i < points.length; i++) {\r\n                for (let j = i + 1; j < points.length; j++) {\r\n                    const d = p5.dist(\r\n                        points[i].pos.x,\r\n                        points[i].pos.y,\r\n                        points[j].pos.x,\r\n                        points[j].pos.y\r\n                    );\r\n                    if (d >= distance) continue;\r\n                    p5.stroke(color);\r\n                    p5.strokeWeight(1);\r\n                    p5.line(\r\n                        points[i].pos.x,\r\n                        points[i].pos.y,\r\n                        points[j].pos.x,\r\n                        points[j].pos.y\r\n                    );\r\n                }\r\n                points[i].update();\r\n                points[i].draw(p5);\r\n                points[i].bounce(width, height);\r\n            }\r\n        };\r\n    };\r\n\r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","import { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\nexport const Sketch03 = () => {\r\n    const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\r\n    const { maxRadius, strokeWeight, color } = useTweaks({\r\n        maxRadius: { value: 300, min: 30, max: 3000, step: 10 },\r\n        strokeWeight: {\r\n            value: Math.floor(Math.random() * 3) + 1,\r\n            min: 1,\r\n            max: 30,\r\n        },\r\n        color: colors[Math.floor(Math.random() * 3)],\r\n    });\r\n    class Circle {\r\n        constructor(x, y, radius, color, strokeWeight) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.radius = radius;\r\n            this.color = color;\r\n            this.strokeWeight = strokeWeight;\r\n        }\r\n\r\n        draw(p5) {\r\n            p5.stroke(this.color);\r\n            p5.noFill();\r\n            p5.strokeWeight(this.strokeWeight);\r\n            p5.ellipse(this.x, this.y, this.radius * 2);\r\n        }\r\n    }\r\n    const sketch = (p5) => {\r\n        const width = p5.windowWidth * 0.6;\r\n        const height = p5.windowHeight * 0.6;\r\n        const minRadius = 5;\r\n        // const maxRadius = 3000;\r\n        const createCircleAttempts = 300;\r\n        const totalCircles = height;\r\n        const circles = [];\r\n        function createAndDrawCircle() {\r\n            let newCircle;\r\n            let circleSafeToDraw = false;\r\n            for (let tries = 0; tries < createCircleAttempts; tries++) {\r\n                newCircle = new Circle(\r\n                    Math.floor(Math.random() * width),\r\n                    Math.floor(Math.random() * height),\r\n                    minRadius,\r\n                    color,\r\n                    strokeWeight\r\n                );\r\n\r\n                if (doesCircleHaveACollision(newCircle)) {\r\n                    continue;\r\n                } else {\r\n                    circleSafeToDraw = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!circleSafeToDraw) {\r\n                return;\r\n            }\r\n\r\n            for (\r\n                let radiusSize = minRadius;\r\n                radiusSize <= maxRadius;\r\n                radiusSize++\r\n            ) {\r\n                newCircle.radius = radiusSize;\r\n                if (doesCircleHaveACollision(newCircle)) {\r\n                    newCircle.radius--;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            circles.push(newCircle);\r\n\r\n            newCircle.draw(p5);\r\n        }\r\n\r\n        function doesCircleHaveACollision(circle) {\r\n            for (let i = 0; i < circles.length; i++) {\r\n                if (circle === circles[i]) return false;\r\n                let otherCircle = circles[i];\r\n                let a = circle.radius + otherCircle.radius;\r\n                let x = circle.x - otherCircle.x;\r\n                let y = circle.y - otherCircle.y;\r\n\r\n                if (a >= Math.sqrt(x * x + y * y)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (\r\n                circle.x + circle.radius >= width ||\r\n                circle.x - circle.radius <= 0\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            if (\r\n                circle.y + circle.radius >= height ||\r\n                circle.y - circle.radius <= 0\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        p5.setup = function () {\r\n            p5.createCanvas(width, height);\r\n            for (let i = 0; i < totalCircles; i++) {\r\n                createAndDrawCircle();\r\n            }\r\n        };\r\n        p5.draw = function () {};\r\n    };\r\n\r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","import { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\n\r\nexport const Sketch04 = () => {\r\n    // const colors = [\"#3E065F\", \"#700B97\", \"#8E05C2\"];\r\n    const { strokeWeight, color,finalSize,minStartSteps,maxStartSteps} = useTweaks({\r\n        strokeWeight: {\r\n            value: Math.floor(Math.random() * 3) + 1,\r\n            min: 1,\r\n            max: 10,\r\n        },\r\n        color: \"#4f87bc\",\r\n        finalSize : {\r\n          value: 3,\r\n          min:1,\r\n          max:3\r\n        },\r\n        minStartSteps:{\r\n          value:2,\r\n          min:2,\r\n          max:10\r\n        },\r\n        maxStartSteps:{\r\n          value:3,\r\n          min:3,\r\n          max:30\r\n        }\r\n    });\r\n    \r\n    const sketch = (p5) => {\r\n      let width = p5.windowWidth * 0.6;\r\n      let height = p5.windowHeight * 0.6;\r\n\r\n        p5.setup = function () {\r\n            p5.createCanvas(width, height);\r\n            p5.strokeWeight(strokeWeight);\r\n            \r\n            p5.stroke(color)\r\n            p5.fill(0,0,0)\r\n            const offset = 2\r\n            let startSteps;\r\n            const tileStep = (height - offset * 2) / 7;\r\n            const startSize = tileStep;\r\n            const directions = [-1, 0, 1];\r\n\r\n            function draw(x, y, width, height, xMovement, yMovement, steps) {\r\n              \r\n              p5.rect(x, y, width, height);\r\n\r\n              if(steps >= 0) {\r\n                var newSize = (startSize) * (steps / startSteps) + finalSize;\r\n                var newX = x + (width - newSize) / 2\r\n                var newY = y + (height - newSize) / 2\r\n                newX = newX - ((x - newX) / (steps + 2)) * xMovement\r\n                newY = newY - ((y - newY) / (steps + 2)) * yMovement\r\n                draw(newX, newY, newSize, newSize, xMovement, yMovement, steps - 1);\r\n              }\r\n            }\r\n\r\n            for( var x = offset; x < width - offset; x += tileStep) {\r\n              for( var y = offset; y < height - offset; y += tileStep) {\r\n                startSteps = minStartSteps + Math.ceil(Math.random() * maxStartSteps)\r\n                var xDirection = directions[Math.floor(Math.random() * directions.length)]\r\n                var yDirection = directions[Math.floor(Math.random() * directions.length)]\r\n                draw(x, y, startSize, startSize, xDirection, yDirection, startSteps - 1);\r\n              }\r\n            }\r\n        };\r\n        p5.draw = function () {\r\n            \r\n        };\r\n    };\r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","import React from \"react\";\r\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\r\nimport { useTweaks } from \"use-tweaks\";\r\nexport const Sketch05 = () => {\r\n    const colors = [\"#5800FF\", \"#E900FF\", \"#FFC600\"];\r\n    const { step, strokeWeight,frameRate,followMouseProbability } = useTweaks({\r\n        step: { value: 15, min: 1, max: 100, step: 1 },\r\n        strokeWeight: {\r\n            value: 2,\r\n            min: 1,\r\n            max: 30,\r\n            step:1\r\n        },\r\n        frameRate: {value:30,min:1,max:60,step:1},\r\n        followMouseProbability:{value:13,min:0,max:100,step:1}\r\n    });\r\n\r\n    const drawFollowMouse = (p5,pos)=>{\r\n        const mouseVec = p5.createVector(p5.mouseX,p5.mouseY);\r\n        mouseVec.sub(pos).normalize().mult(step)\r\n        p5.push()\r\n        p5.translate(pos.x,pos.y);\r\n        p5.line(0,0,mouseVec.x,mouseVec.y)\r\n        p5.pop()\r\n        pos.add(mouseVec)\r\n    }\r\n\r\n    const drawRandom = (p5,pos,width,height)=>{\r\n        let x = pos.x;\r\n        let y = pos.y;\r\n        const r = Math.floor(p5.random(0,4))\r\n            switch(r){\r\n                case 0:\r\n                    x+=step;\r\n                    x = Math.min(width,x)\r\n                    break;\r\n                case 1:\r\n                    x-=step;\r\n                    x = Math.max(0,x)\r\n                    break;\r\n                case 2:\r\n                    y+=step;\r\n                    y = Math.min(height,y)\r\n                    break;\r\n                case 3:\r\n                    y-=step;\r\n                    y = Math.max(0,y)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        p5.line(pos.x,pos.y,x,y)\r\n        pos.set(x,y)\r\n    }\r\n\r\n    function sketch(p5) {\r\n        const width = p5.windowWidth * 0.6;\r\n        const height = p5.windowHeight * 0.6;\r\n        const pos = p5.createVector(Math.floor(width/2),Math.floor(height/2));\r\n        \r\n        p5.setup = function () {\r\n            p5.createCanvas(width, height,p5.WEBGL);\r\n            p5.frameRate(frameRate)\r\n        };\r\n\r\n        p5.draw = function () {\r\n            p5.translate(-width/2,-height/2)\r\n            p5.stroke(p5.color(p5.random(colors)));\r\n            p5.strokeWeight(strokeWeight);\r\n            \r\n            const followMouse = p5.random(100);\r\n            if(followMouse < followMouseProbability)\r\n                drawFollowMouse(p5,pos)\r\n            else\r\n                drawRandom(p5,pos,width,height)\r\n\r\n\r\n        };\r\n    }\r\n    \r\n    return <ReactP5Wrapper sketch={sketch} />;\r\n};\r\n","export default class DNA {\n    constructor(target, mutationRate, value, x, y) {\n        this.target = target.split('');\n        this.mutationRate = mutationRate;\n        this.possibleCombo = '1234567890-=!@#$%^&*()_+qwertyuiop[]\\\\QWERTYUIOP{}|asdfghjkl;\\'ASDFGHJKL:\"zxcvbnm,./ZXCVBNM<>? ';\n        this.value = value?value.split(''):this.createRandom(target.length).split('');\n        this.fitness;\n        this.x = x;\n        this.y = y;\n        this.xFit = 0;\n        this.yFit = 0;\n        this.midpoint;\n    }\n\n    createRandom(length) {\n        let result = '';\n        for (let i =0; i<length; i++) {\n            result += this.possibleCombo.charAt(Math.floor(Math.random()*this.possibleCombo.length));\n        }\n        return result;\n    }\n\n    calculateFitness() {\n        this.fitness = 0;\n        this.xFit = 0;\n        this.yFit = 0;\n        for (let i =0; i<this.value.length; i++) {\n            if (this.target[i] === this.value[i]) {\n                this.fitness+=1;\n                if (i<this.midpoint) this.xFit+=1;\n                else this.yFit-=1;\n            } else {\n                if (i<this.midpoint) this.xFit-=1;\n                else this.yFit+=1;\n            }\n        }\n        this.fitness/=this.value.length;\n        this.xFit /= this.midpoint;\n        this.yFit /= (this.value.length - this.midpoint);\n    }\n    updatePoint(step) {\n        this.x = this.xFit *step;\n        this.y = this.yFit *step;\n    }\n    draw(p5) {\n        // p5.point(this.x, this.y);\n        p5.circle(this.x, this.y, 1);\n    }\n}\n","import DNA from './DNA';\n\nexport default class Population {\n    constructor(target, mutationRate, popMax, x, y) {\n        this.target = target;\n        this.mutationRate = mutationRate;\n        this.popMax = popMax;\n        this.population = [];\n        this.matingPool = [];\n        this.numOfGens = 0;\n        this.averageFit = 0;\n        for (let i =0; i< popMax; i++) {\n            this.population.push(new DNA(target, mutationRate, null, x?x:0, y?y:0));\n        }\n        this.best = this.population[0];\n        this.calculateFitness();\n    }\n\n    calculateFitness() {\n        this.best = this.population[0];\n        this.population.forEach((e) => {\n            e.calculateFitness();\n            if (e.fitness > this.best.fitness) {\n                this.best = e;\n            }\n            this.averageFit += e.fitness;\n        });\n        this.averageFit/=this.population.length;\n    }\n\n    generate() {\n        this.matingPool = [];\n        let maxFitness = 0;\n        for (let i = 0; i < this.population.length; i++) {\n            if (this.population[i].fitness > maxFitness) {\n                maxFitness = this.population[i].fitness;\n            }\n        }\n        for (let i = 0; i<this.population.length; i++) {\n            const n = Math.floor(this.population[i].fitness/maxFitness*100);\n            for (let j = 0; j < n; j++) {\n                this.matingPool.push(this.population[i]);\n            }\n        }\n    }\n\n    newGen() {\n        for (let i = 0; i<this.population.length; i++) {\n            const midPoint = Math.floor(Math.random()*this.target.length);\n            const parentA = this.matingPool[Math.floor(Math.random()*this.matingPool.length)];\n            const parentB = this.matingPool[Math.floor(Math.random()*this.matingPool.length)];\n            this.population[i].midpoint = midPoint;\n            for (let j = 0; j<this.population[i].value.length; j++) {\n                if (j<midPoint) this.population[i].value[j] = parentA.value[j];\n                else this.population[i].value[j]=parentB.value[j];\n                const r = Math.random();\n                if (r<this.mutationRate) {\n                    this.population[i].value[j] = this.population[i].createRandom(1);\n                }\n            }\n        }\n        this.numOfGens+=1;\n    }\n    getBest() {\n        return this.best.value.join('');\n    }\n    getAverageFit() {\n        return this.averageFit.toFixed(2);\n    }\n    getNumOfGens() {\n        return this.numOfGens;\n    }\n    update(step) {\n        this.population.forEach((e) => e.updatePoint(step));\n    }\n    draw(p5) {\n        this.population.sort((a, b)=>a.fitness - b.fitness);\n        for (let i = this.population.length-1; i>=Math.max(this.population.length-501, 0); i--) {\n            this.population[i].draw(p5);\n        }\n    }\n}\n","import React from 'react';\nimport {ReactP5Wrapper} from 'react-p5-wrapper';\nimport {useTweaks} from 'use-tweaks';\nimport Population from '../Models/sketch06/Population';\nexport const Sketch06 = () => {\n    const colors = '#08D9D6';\n    const {strokeWeight, frameRate, step, mutationRate, populationMax, targetPhrase} = useTweaks({\n        strokeWeight: {\n            value: 3,\n            min: 1,\n            max: 30,\n            step: 1,\n        },\n        frameRate: {value: 30, min: 1, max: 60, step: 1},\n        step: {value: 300, min: 10, max: 500, step: 10},\n        mutationRate: {value: 0.01, min: 0, max: 1, step: 0.01},\n        populationMax: {value: 2000, min: 10, max: 40000, step: 10},\n        targetPhrase: 'If science is to progress, what we need is the ability to experiment.',\n\n    });\n\n    function sketch(p5) {\n        const width = p5.windowWidth * 0.8;\n        const height = p5.windowHeight * 0.8;\n        const population = new Population(targetPhrase, mutationRate, populationMax, 0, 0);\n        const bestPhrase = p5.createP('Best phrase:');\n        const averageFit = p5.createP('Average Fitness:');\n        const numOfGens = p5.createP('Number of gens:');\n        const title = p5.createA('https://en.wikipedia.org/wiki/Infinite_monkey_theorem#:~:text=The%20infinite%20monkey%20theorem%20states,an%20infinite%20number%20of%20times.', 'Infinite monkey theorem - Genetic Algorithm');\n        p5.setup = function() {\n            p5.createCanvas(width, height, p5.WEBGL);\n            p5.frameRate(frameRate);\n            p5.stroke(255);\n            p5.strokeWeight(strokeWeight);\n            title.position(p5.windowWidth/3, p5.windowHeight-200);\n            bestPhrase.position(0, 0);\n            bestPhrase.class('best');\n            averageFit.position(width/2, 0);\n            averageFit.class('best');\n            numOfGens.position(2*width/3, 0);\n            numOfGens.class('best');\n            console.log(population);\n        };\n\n        p5.draw = function() {\n            p5.stroke(p5.color(colors));\n            population.generate();\n            population.newGen();\n            population.calculateFitness();\n            population.update(step);\n            const best = population.getBest();\n            bestPhrase.html('Best phrase:<br>' + best);\n            const average = population.getAverageFit();\n            averageFit.html('Average Fitness:<br>' + average);\n            const num = population.getNumOfGens();\n            numOfGens.html('Number of gens:<br>' + num);\n            population.draw(p5);\n            if (best === targetPhrase) p5.noLoop();\n        };\n    }\n\n    return <ReactP5Wrapper sketch={sketch} />;\n};\n","/* eslint-disable react/react-in-jsx-scope */\nimport './App.css';\nimport {Sketch01} from './sketches/sketch01';\nimport {Sketch02} from './sketches/sketch02';\nimport {Sketch03} from './sketches/sketch03';\nimport {Navbar, Container, Nav} from 'react-bootstrap';\nimport {Switch, Route, BrowserRouter as Router} from 'react-router-dom';\nimport {Sketch04} from './sketches/sketch04';\nimport {Sketch05} from './sketches/sketch05';\nimport {Sketch06} from './sketches/sketch06';\nconst App = () => {\n    return (\n        <>\n            <Navbar expand=\"lg\">\n                <Container>\n                    <Navbar.Toggle\n                        aria-controls=\"basic-navbar-nav\"\n                        bg=\"light\"\n                    />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Link href=\"/generative-art/sketch01\">\n                                Sketch01\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch02\">\n                                Sketch02\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch03\">\n                                Sketch03\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch04\">\n                                Sketch04\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch05\">\n                                Sketch05\n                            </Nav.Link>\n                            <Nav.Link href=\"/generative-art/sketch06\">\n                                Sketch06\n                            </Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route\n                            exact={true}\n                            path={[\n                                '/generative-art/',\n                                '/generative-art/sketch01',\n                            ]}\n                        >\n                            <Sketch01 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch02\">\n                            <Sketch02 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch03\">\n                            <Sketch03 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch04\">\n                            <Sketch04 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch05\">\n                            <Sketch05 />\n                        </Route>\n                        <Route exact={true} path=\"/generative-art/sketch06\">\n                            <Sketch06 />\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}